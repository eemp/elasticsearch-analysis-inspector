{"version":3,"sources":["Analysis/Editor.js","services/analyze.js","Analysis/index.js","sample-data.js","App.js","index.js"],"names":["Editor","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","editorWillMount","bind","assertThisInitialized","monaco","content","editorContent","JSON","stringify","react_default","a","createElement","lib_default","defaultValue","height","language","ref","theme","React","Component","SERVICE_URL","updateAnalysis","analysis","text","definition","request","post","objectSpread","then","res","tokens","data","_","assign","useStyles","makeStyles","chip","margin","spacing","VISUAL_MODE","DEFAULT_NAME","Analysis","state","mode","name","onChange","onEdit","setState","updatedDefinition","parse","refs","editor","getValue","nameField","value","isFunction","_this2","_this$props","className","description","onClose","Card","CardHeader","action","CardActions","disableSpacing","inEditMode","IconButton","onClick","Done_default","Edit_default","Delete_default","subheader","title","TextField","inputRef","variant","CardContent","Analysis_Editor","Analysis_TokenChips","withLiveAnalyze","_React$Component2","WithLiveAnalysis","_this3","inherits","createClass","key","_ref","_this4","analyzer","charFilter","char_filter","filter","tokenizer","compact","concat","castArray","join","describeAnalyzer","_ref2","_this$state","TokenChips","onTokenSelect","selectedStartOffset","styles","chips","map","tokenDetails","Chip","avatar","Avatar","start_offset","color","undefined","label","token","Fragment","sampleText","analyses","uuid","app","backgroundColor","appBarSpacer","mixins","toolbar","section","marginBottom","marginTop","App","createCloseFn","onAdd","debounce","analysisKey","idx","Promise","mapSeries","catch","err","console","error","resolve","updateAnalyses","updatedAnalyses","newAnalysis","startOffset","updatedVal","classes","_this$state2","AppBar","position","Toolbar","Typography","Grid","container","item","xs","Container","fullWidth","ev","target","persist","Button","style","float","src_Analysis","withStyles","App_App","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.062530d9.chunk.js","sourcesContent":["import MonacoEditor from 'react-monaco-editor';\nimport React from 'react';\n\nclass Editor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.editorWillMount = this.editorWillMount.bind(this);\n  }\n\n  editorWillMount(monaco) {\n    /*\n     * Missing monaco webpack plugin?\n     */\n    //monaco.languages.json.jsonDefaults.setDiagnosticsOptions({\n      //validate: true,\n    //});\n  }\n\n  render() {\n    const { content } = this.props;\n    const editorContent = JSON.stringify(content, null, 2);\n\n    return (\n      <MonacoEditor\n        defaultValue={editorContent}\n        editorWillMount={this.editorWillMount}\n        height={200}\n        language=\"json\"\n        ref=\"monaco\"\n        theme=\"vs-dark\"\n      />\n    );\n  }\n}\n\nexport default Editor;\n","import _ from 'lodash';\nimport Promise from 'bluebird';\nimport request from 'axios';\n\nconst SERVICE_URL = 'https://hear2learn.azurewebsites.net/_analyze';\n\nexport default function updateAnalyses(analyses, text) {\n  return Promise.mapSeries(analyses, analysis => {\n    return updateAnalysis(analysis, text).catch(err => {\n      console.error('Unable to fetch updated analysis for:', analysis);\n      return Promise.resolve(analysis);\n    });\n  });\n}\n\nexport function updateAnalysis(analysis, text) {\n  const { definition } = analysis;\n  return request.post(SERVICE_URL, {\n    ...definition,\n    text,\n  }).then(res => {\n    const { tokens } = res.data;\n    return _.assign({}, analysis, {\n      tokens,\n    });\n  });\n}\n","import _ from 'lodash';\nimport React from 'react';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Chip from '@material-ui/core/Chip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport DoneIcon from '@material-ui/icons/Done';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Editor from './Editor';\nimport { updateAnalysis } from '../services/analyze';\n\nconst useStyles = makeStyles(theme => ({\n  chip: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport const EDIT_MODE = 'edit';\nexport const VISUAL_MODE = 'visual';\n\nconst DEFAULT_NAME = 'New Analyzer';\n\nclass Analysis extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mode: props.mode || VISUAL_MODE,\n      name: props.name || DEFAULT_NAME,\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onEdit = this.onEdit.bind(this);\n  }\n\n  onEdit() {\n    this.setState({\n      mode: EDIT_MODE,\n    });\n  }\n\n  onChange() {\n    const { onChange } = this.props;\n    const updatedDefinition = JSON.parse(this.refs.editor.refs.monaco.editor.getValue());\n    this.setState({\n      mode: VISUAL_MODE,\n      name: this.nameField.value,\n    });\n    _.isFunction(onChange) && onChange({\n      definition: updatedDefinition,\n      name: this.nameField.value,\n    });\n  }\n\n  inEditMode() {\n    const { mode } = this.state;\n    return mode === EDIT_MODE;\n  }\n\n  render() {\n    const { className, definition, description, onClose } = this.props;\n    const { name } = this.state;\n    return (\n      <Card className={className}>\n        <CardHeader\n          action={\n            <CardActions disableSpacing>\n              {\n                this.inEditMode()\n                  ? <IconButton onClick={this.onChange}>\n                    <DoneIcon />\n                  </IconButton>\n                  : <IconButton onClick={this.onEdit}>\n                    <EditIcon />\n                  </IconButton>\n              }\n              <IconButton onClick={onClose}>\n                <DeleteIcon />\n              </IconButton>\n            </CardActions>\n          }\n          subheader={description}\n          title={\n            this.inEditMode()\n              ? <TextField inputRef={ref => this.nameField = ref} variant=\"filled\" defaultValue={name} />\n              : name\n          }\n        />\n        <CardContent>\n          {\n            this.inEditMode()\n              ? <Editor content={definition} ref=\"editor\" />\n              : <TokenChips {...this.props} />\n          }\n        </CardContent>\n      </Card>\n    );\n  }\n}\n\nfunction withLiveAnalyze(Component) {\n  class WithLiveAnalysis extends React.Component {\n    constructor(props) {\n      const { definition, tokens } = props;\n      super(props);\n      this.onChange = this.onChange.bind(this);\n      this.updateAnalysis = this.updateAnalysis.bind(this);\n      this.state = {\n        definition,\n        tokens,\n      };\n    }\n\n    componentDidMount() {\n      this.updateAnalysis();\n    }\n\n    onChange({ definition }) {\n      this.setState({\n        definition,\n      }, this.updateAnalysis);\n    }\n\n    updateAnalysis() {\n      const { text } = this.props;\n      const { definition } = this.state;\n      const description = describeAnalyzer(definition);\n\n      updateAnalysis({ definition }, text).then(({ tokens }) => {\n        this.setState({\n          description,\n          tokens,\n        });\n      });\n    }\n\n    render() {\n      const { definition, description, tokens } = this.state;\n      return (\n        <Component\n          {...this.props}\n          definition={definition}\n          description={description}\n          onChange={this.onChange}\n          tokens={tokens}\n        />\n      );\n    }\n  }\n\n  return WithLiveAnalysis;\n}\n\nexport default withLiveAnalyze(Analysis);\n\nconst TokenChips = (props) => {\n  const { onTokenSelect, selectedStartOffset, tokens } = props;\n  const styles = useStyles();\n  const chips = _.map(tokens, tokenDetails => (\n    <Chip\n      avatar={<Avatar>{tokenDetails.start_offset}</Avatar>}\n      className={styles.chip}\n      color={selectedStartOffset === tokenDetails.start_offset ? 'primary' : undefined}\n      key={tokenDetails.start_offset}\n      label={tokenDetails.token}\n      onClick={() => onTokenSelect(tokenDetails.start_offset)}\n    />\n  ));\n  return (\n    <React.Fragment>\n      {chips}\n    </React.Fragment>\n  );\n};\n\nfunction describeAnalyzer(definition) {\n  const { analyzer, char_filter:charFilter, filter, tokenizer } = definition;\n  return _.compact([\n    analyzer && `Analyzer: ${analyzer}`,\n    tokenizer && `Tokenizer: ${tokenizer}`,\n    charFilter && `Character Filters: ${_.castArray(charFilter).join(' + ')}`,\n    filter && `Filters: ${_.castArray(filter).join(' + ')}`,\n  ]).join(', ');\n}\n","import uuid from 'uuid/v4';\n\nconst sampleText = '<p>The quick brown fox jumps over the quick dog.</p>';\n\nconst analyses = [\n  {\n    name: 'Standard Analyzer',\n    definition: {\n      analyzer: 'standard',\n    },\n    key: uuid(),\n  },\n  {\n    name: 'Stop Analyzer',\n    definition: {\n      analyzer: 'stop',\n    },\n    key: uuid(),\n  },\n  {\n    name: 'Custom Analyzer',\n    definition: {\n      tokenizer: 'standard',\n      char_filter: [ 'html_strip' ],\n      filter: [ 'lowercase', 'kstem' ],\n    },\n    key: uuid(),\n  },\n];\n\nexport {\n  analyses,\n  sampleText,\n};\n","import _ from 'lodash';\nimport React from 'react';\nimport uuid from 'uuid/v4';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n//import { makeStyles, withStyles } from '@material-ui/styles';\n\nimport Analysis, { EDIT_MODE } from './Analysis';\nimport updateAnalyses from './services/analyze';\n\nimport { analyses, sampleText } from './sample-data';\n\nconst useStyles = makeStyles(theme => ({\n  app: {\n    backgroundColor: '#fbfbfb',\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  chip: {\n    margin: theme.spacing(1),\n  },\n  section: {\n    marginBottom: theme.spacing(4),\n    marginTop: theme.spacing(4),\n  },\n}));\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: sampleText,\n      analyses,\n    };\n    this.createCloseFn = this.createCloseFn.bind(this);\n    this.onAdd = this.onAdd.bind(this);\n    this.onChange = _.debounce(\n      this.onChange.bind(this),\n      750\n    );\n    this.onClose = this.onClose.bind(this);\n    this.onTokenSelect = this.onTokenSelect.bind(this);\n  }\n\n  createCloseFn(analysisKey) {\n    return () => {\n      this.onClose(analysisKey);\n    };\n  }\n\n  onClose(analysisKey) {\n    const { analyses } = this.state;\n    this.setState({\n      analyses: _.filter(analyses, (analysis, idx) =>\n        analysis.key !== analysisKey && analysisKey !== idx\n      ),\n    });\n  }\n\n  onChange() {\n    const { analyses, text } = this.state;\n    updateAnalyses(analyses, text).then(updatedAnalyses =>\n      this.setState({ analyses: updatedAnalyses })\n    );\n  }\n\n  onAdd() {\n    const { analyses } = this.state;\n    const newAnalysis = _.assign({}, analyses[0], {\n      key: uuid(),\n      mode: EDIT_MODE,\n    });\n    this.setState({\n      analyses: _.concat(newAnalysis, analyses),\n    });\n  }\n\n  onTokenSelect(startOffset) {\n    const { selectedStartOffset } = this.state;\n    const updatedVal = selectedStartOffset === startOffset\n      ? null\n      : startOffset\n    ;\n    this.setState({\n      selectedStartOffset: updatedVal,\n    });\n  }\n\n  render() {\n    const { classes: styles } = this.props;\n    const { analyses, selectedStartOffset, text } = this.state;\n\n    return (\n      <div className={styles.app}>\n        <AppBar position=\"absolute\">\n          <Toolbar>\n            <Typography variant=\"h6\">Elasticsearch Analysis Inspector</Typography>\n          </Toolbar>\n        </AppBar>\n        <div className={styles.appBarSpacer} />\n        <Grid container>\n          <Grid item xs={12}>\n            <Container className={styles.section}>\n              <TextField\n                defaultValue={text}\n                fullWidth\n                label=\"Text\"\n                onChange={\n                  ev => {\n                    const text = ev.target.value;\n                    ev.persist();\n                    this.setState({text}, this.onChange);\n                  }\n                }\n                variant=\"outlined\"\n              />\n            </Container>\n          </Grid>\n          <Grid item xs={12}>\n            <Container>\n              <Button variant=\"contained\" color=\"secondary\" onClick={this.onAdd} style={{float: 'right'}}>New Analyzer</Button>\n            </Container>\n          </Grid>\n          <Grid item xs={12}>\n            <Container>\n              {\n                _.map(analyses, analysis => (\n                  <Analysis\n                    {...analysis}\n                    className={styles.section}\n                    key={analysis.key}\n                    onClose={this.createCloseFn(analysis.key)}\n                    onTokenSelect={this.onTokenSelect}\n                    selectedStartOffset={selectedStartOffset}\n                    text={text}\n                  />\n                ))\n              }\n            </Container>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nfunction withStyles() {\n  return props => {\n    const styles = useStyles();\n    return <App classes={styles} {...props} />;\n  };\n}\n\nexport default withStyles(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}